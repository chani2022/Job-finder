name: Symfony CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repo
        uses: actions/checkout@v4

      - name: 🛠️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🐳 Install Docker Compose
        run: sudo apt-get update && sudo apt-get install docker-compose -y

      - name: 🛠️ Build and run containers
        run: |
          docker-compose up -d
          sleep 10  # (laisse le temps aux containers de démarrer)

      - name: 📦 Install dependencies
        run: |
          docker exec $(docker ps -qf "name=app") composer install --no-progress --no-suggest

      - name: Generate JWT keys for test environment
        run: |
          docker exec $(docker ps -qf "name=app") mkdir -p config/jwt
          docker exec $(docker ps -qf "name=app") openssl genrsa -out config/jwt/private.pem -aes256 -passout pass:test 4096
          docker exec $(docker ps -qf "name=app") openssl rsa -pubout -in config/jwt/private.pem -passin pass:test -out config/jwt/public.pem

      - name: Set JWT passphrase in .env.test
        run: docker exec $(docker ps -qf "name=app") echo "JWT_PASSPHRASE=test" >> .env.test

      - name: Set up .env.test
        run: |
          docker exec $(docker ps -qf "name=app") cp .env.test .env.local

      - name: Create database for .env.test
        run: |
          docker exec $(docker ps -qf "name=app") php bin/console d:d:c

      - name: Run migration .env.test
        run: |
          docker exec $(docker ps -qf "name=app") php bin/console doctrine:schema:update --force

      - name: Create indexes meilisearch
        run: |
          docker exec $(docker ps -qf "name=app") php bin/console meili:create
      
      - name: Add primary key meilisearch
        run: |
          docker exec $(docker ps -qf "name=app") php bin/console meili:add-primaryKey

      - name: Run consumer rabbitmq
        run: |
          docker exec $(docker ps -qf "name=app") php bin/console rabbitmq:consumer -m 50 generate_pdf_send_email

      - name: Check schema doctrine
        run: |
          docker exec $(docker ps -qf "name=app") php bin/console doctrine:schema:validate

      - name: 🧪 Run tests inside container
        run: |
          docker exec $(docker ps -qf "name=app") php bin/phpunit

      - name: 🧹 Stop and clean containers
        run: |
          docker-compose down
